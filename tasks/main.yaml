---
- name: include os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yaml"
    - "{{ ansible_distribution }}.yaml"
    - "{{ ansible_os_family }}.yaml"

- name: include install tasks
  import_tasks: "install-{{ sanoid_install_from }}.yaml"

- name: create config directory
  file:
    dest: "{{ sanoid_conf_dir }}"
    state: directory
    owner: root
    group: root

- name: generate sanoid config
  ansible.builtin.template:
    src: ../templates/sanoid.conf.j2
    dest: "{{ sanoid_conf }}"
    owner: root
    group: root
    mode: '0700'

- name: enable sanoid prune service
  ansible.builtin.systemd:
    name: sanoid-prune.service
    masked: no
    enabled: yes

- name: enable sanoid timer
  ansible.builtin.systemd:
    name: sanoid.timer
    state: started
    masked: no
    enabled: yes

- name: configure syncoid service
  block:
    - name: generate SSH key
      ansible.builtin.user:
        name: root
        generate_ssh_key: yes
        ssh_key_type: "{{ syncoid_generated_ssh_key_type }}"
        ssh_key_bits: "{{ syncoid_generated_ssh_key_bits }}"
        ssh_key_file: ".ssh/{{ syncoid_generated_ssh_key }}"
      register: "user_info"
      when: syncoid_generate_ssh_key

    - name: install SSH key on remote hosts
      block:
        - name: add SSH key to destination authorized_keys
          ansible.posix.authorized_key:
            user: "{{ item.dest_user | default('root') }}"
            state: present
            key: "{{ user_info.ssh_public_key if syncoid_generate_ssh_key else lookup('file', syncoid_ssh_key) }}"
          delegate_to: "{{ item.dest_host }}"
          when: item.dest_host is defined
          with_items:
            - "{{ syncoid_syncs }}"

        - name: add SSH key to source authorized_keys
          ansible.posix.authorized_key:
            user: "{{ item.src_user | default('root') }}"
            state: present
            key: "{{ user_info.ssh_public_key if syncoid_generate_ssh_key else lookup('file', syncoid_ssh_key) }}"
          delegate_to: "{{ item.src_host }}"
          when: item.src_host is defined
          with_items:
            - "{{ syncoid_syncs }}"
      when: syncoid_ssh_key_install_remote

    - name: set up syncoid systemd service
      block:
        - name: set up syncoid systemd service
          import_tasks: "systemd-add.yaml"
          vars:
            systemd_service_name: "{{ syncoid_service_name }}"
            systemd_service_template: syncoid.service.j2
            systemd_timer_template: syncoid.timer.j2
        - name: enable syncoid timer
          ansible.builtin.systemd:
            name: "{{ syncoid_service_name }}.timer"
            state: started
            enabled: yes
            masked: no
            daemon_reload: yes
  when:
    - syncoid_syncs is not none
    - syncoid_syncs | length > 0

- name: remove syncoid service
  import_tasks: "systemd-remove.yaml"
  vars:
    systemd_service_name: "{{ syncoid_service_name }}"
  when: (syncoid_syncs is none) or (syncoid_syncs | length == 0)
